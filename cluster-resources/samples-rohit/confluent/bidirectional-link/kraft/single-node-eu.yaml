apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: kraft-eu
  namespace: confluent
  labels:
    confluent-operator.webhooks.platform.confluent.io/disable: "true"
spec:
  replicas: 1
  dataVolumeCapacity: 10G
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
  authorization:
    type: simple
    superUsers:
      - User:kafka
      - User:kraft
  configOverrides:
    log4j:
      - log4j.rootLogger=INFO, stdout
    server: #This config override is required for CP 7.0 update to use AclAuthorizer instead of SimpleAclAuthorizer
      - authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer

  listeners:
    controller:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:^CN=([a-zA-Z0-9]*).*$/$1/
      tls:
        enabled: true
        secretRef: tls-kafka
  tls:
    secretRef: tls-kafka
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka-eu
  namespace: confluent
  labels:
    confluent-operator.webhooks.platform.confluent.io/disable: "true"
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 100Gi
  storageClass:
    name: gp3
  configOverrides:
    log4j:
      #   - log4j.rootLogger=DEBUG, stdout
      - log4j.logger.kafka.server.link=TRACE, stdout
    server:
      - confluent.cluster.link.metadata.topic.min.isr=1
      - confluent.cluster.link.metadata.topic.replication.factor=1
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
      - "confluent.cluster.link.enable=true"
      - "password.encoder.secret=secret"
      - authorizer.class.name=io.confluent.kafka.security.authorizer.ConfluentServerAuthorizer
      - confluent.tier.feature=true
      - confluent.tier.enable=true
      - confluent.tier.backend=S3
      - confluent.tier.s3.bucket=rohit-confluent
      - confluent.tier.s3.region=eu-west-2
  tls:
    secretRef: tls-kafka
  listeners:
    internal:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:^CN=([a-zA-Z0-9]*).*$/$1/
      tls:
        enabled: true
    external:
      authentication:
        type: mtls
        principalMappingRules:
          - RULE:^CN=([a-zA-Z0-9]*).*$/$1/
      tls:
        enabled: true
  authorization:
    type: simple
    superUsers:
      - User:kafka
  dependencies:
    kRaftController:
      controllerListener:
        tls:
          enabled: true
        authentication:
          type: mtls
      clusterRef:
        name: kraft-eu
  podTemplate:
    serviceAccountName: kafka
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 4000m
        memory: 8096Mi
    # podSecurityContext:
    #   fsGroup: 1000
    #   runAsUser: 1000
    #   runAsNonRoot: true
  metricReporter:
    enabled: true
    tls:
      enabled: true
    authentication:
      type: mtls

---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: c3-eu
  namespace: confluent
  labels:
    confluent-operator.webhooks.platform.confluent.io/disable: "true"
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - confluent.controlcenter.command.topic.replication=1
      - confluent.controlcenter.replication.factor=1
      - confluent.metrics.reporter.topic.replicas=1
      - confluent.metrics.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.controlcenter.internal.topics.replication=1
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: eu.rohit.local
      prefix: c3
  tls:
    secretRef: tls-kafka
  podTemplate:
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka-eu.confluent.svc.cluster.local:9071
      authentication:
        type: mtls
      tls:
        enabled: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka

  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::492737776546:role/rohit-confluent"
    eks.amazonaws.com/sts-regional-endpoints: "true"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: kafka-eu
spec:
  kafkaClusterRef:
    name: kafka
  kafkaRest:
    endpoint: http://kafka-eu.confluent.svc.cluster.local:8090
    # authentication:
    #   type: mtls
    tls:
      secretRef: tls-kafka
---

