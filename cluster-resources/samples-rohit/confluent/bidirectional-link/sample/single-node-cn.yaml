apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper-cn
  namespace: confluent
  labels:
    confluent-operator.webhooks.platform.confluent.io/disable: "true"
spec:
  replicas: 1
  image:
    application: confluentinc/cp-zookeeper:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  logVolumeCapacity: 10Gi
  podTemplate:
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka-cn
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-server:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 100Gi
  configOverrides:
    server:
      - inter.broker.protocol.version=3.6
      - confluent.cluster.link.metadata.topic.min.isr=1
      - confluent.cluster.link.metadata.topic.replication.factor=1
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
      - "confluent.cluster.link.enable=true"
      - "password.encoder.secret=secret"
  dependencies:
    zookeeper:
      discovery:
        name: zookeeper-cn
  podTemplate:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  metricReporter:
    enabled: true
---
apiVersion: platform.confluent.io/v1beta1
kind: ControlCenter
metadata:
  name: controlcenter-cn
  namespace: confluent
spec:
  replicas: 1
  image:
    application: confluentinc/cp-enterprise-control-center:7.6.0
    init: confluentinc/confluent-init-container:2.8.0
  dataVolumeCapacity: 10Gi
  configOverrides:
    server:
      - confluent.controlcenter.command.topic.replication=1
      - confluent.controlcenter.replication.factor=1
      - confluent.metrics.reporter.topic.replicas=1
      - confluent.metrics.topic.replication=1
      - confluent.monitoring.interceptor.topic.replication=1
      - confluent.controlcenter.internal.topics.replication=1
  externalAccess:
    type: loadBalancer
    loadBalancer:
      domain: rohit.local
      prefix: c3cn
  podTemplate:
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
    probe:
      liveness:
        periodSeconds: 10
        failureThreshold: 5
        timeoutSeconds: 500
    podSecurityContext:
      fsGroup: 1000
      runAsUser: 1000
      runAsNonRoot: true
  dependencies:
    kafka:
      bootstrapEndpoint: kafka-cn.confluent.svc.cluster.local:9071

    # schemaRegistry:
    #   url: http://schemaregistry.confluent.svc.cluster.local:8081
    # ksqldb:
    #   - name: ksql-dev
    #     url: http://ksqldb.confluent.svc.cluster.local:8088
    # connect:
    #   - name: connect-dev
    #     url: http://connect.confluent.svc.cluster.local:8083
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka

  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::492737776546:role/rohit-confluent"
    eks.amazonaws.com/sts-regional-endpoints: "true"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: kafka-cn
spec:
  kafkaClusterRef:
    name: kafka
  kafkaRest:
    endpoint: http://kafka-cn.confluent.svc.cluster.local:8090

---

